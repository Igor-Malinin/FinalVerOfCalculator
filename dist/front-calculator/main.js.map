{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/client-registration/client-registration.component.ts","./src/app/client-registration/client-registration.component.html","./src/app/client/client.component.ts","./src/app/client/client.component.html","./src/app/clients-page/clients-page.component.ts","./src/app/clients-page/clients-page.component.html","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-page/main-page.component.ts","./src/app/main-page/main-page.component.html","./src/app/pipes/cellphone.pipe.ts","./src/app/services/auth.service.ts","./src/app/services/calculation.service.ts","./src/app/services/clients.service.ts","./src/app/services/manager.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ErrorPageComponent} from \"./error-page/error-page.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {MainPageComponent} from \"./main-page/main-page.component\";\nimport {ClientsPageComponent} from \"./clients-page/clients-page.component\";\nimport {AuthGuard} from \"./auth.guard\";\nimport {ClientComponent} from \"./client/client.component\";\nimport {ClientRegistrationComponent} from \"./client-registration/client-registration.component\";\n\nconst routes: Routes = [\n    {path: '', component: MainPageComponent},\n    {path: 'clientspage', component: ClientsPageComponent, canActivate: [AuthGuard]},\n    {path: 'clientspage/:id', component: ClientComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'clientregistration', component: ClientRegistrationComponent},\n\n    {path: 'error', component: ErrorPageComponent},\n\n    {path: '**', redirectTo: '/error'}\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import {Component, ElementRef, HostListener, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {AuthService} from \"./services/auth.service\";\nimport {ManagerService} from \"./services/manager.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n  constructor(\n      public auth: AuthService,\n      public managerService: ManagerService\n  ) {}\n\n  // ngAfterViewInit() {\n  //   window.addEventListener(\"scroll\", this.onWindowScroll, true);   // I just commented it and it is working .\n  // }\n  //\n  // @HostListener(\"window:scroll\", ['$event'])\n  // onWindowScroll() {\n  //   const windowScroll = window.scrollY;\n  //   console.log(windowScroll);\n  // }\n}\n","<!-- Header start -->\n<header class=\"header\">\n    <div class=\"wrapper\">\n        <div class=\"header__wrapper\">\n            <div class=\"header__logo-with-title\">\n                <a href=\"/\" class=\"header__logo-link\">\n                    <img src=\"../assets/images/header-logo.png\" alt=\"Discover Amazing places in Japan\" class=\"header__logo-pic\" *ngIf=\"auth.getIsAuth(); else hiddenLogo\">\n                    <ng-template #hiddenLogo>\n                        <img src=\"../assets/images/header-logo.png\" alt=\"Discover Amazing places in Japan\" class=\"header__logo-pic\" style=\"opacity: 0\">\n                    </ng-template>\n                </a>\n                <h1 class=\"header__title\" *ngIf=\"auth.getIsAuth(); else hiddenLogo\">Строительный калькулятор</h1>\n            </div>\n            <!--            <button class=\"btn\" (click)=\"onWindowScroll()\">scroll</button>-->\n            <div class=\"header__fjb\">\n                <div class=\"header__fio-jobpost\" *ngIf=\"auth.getIsAuth()\">\n                    <p class=\"header__fio\">{{managerService.managers[0].name}} {{managerService.managers[0].surname}}</p>\n                    <p class=\"header__jobpost\">{{managerService.managers[0].jobpost}}</p>\n                </div>\n                <a class=\"btn header__btn\" routerLink=\"/login\" *ngIf=\"!auth.getIsAuth(); else authorizated\">Войти</a>\n                <ng-template #authorizated>\n                    <a class=\"btn header__btn\" (click)=\"auth.logout()\" routerLink=\"/\">Выйти</a>\n                </ng-template>\n            </div>\n\n        </div>\n    </div>\n</header>\n<!-- Header end -->\n\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {ErrorPageComponent} from './error-page/error-page.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {MainPageComponent} from './main-page/main-page.component';\nimport {ClientsPageComponent} from './clients-page/clients-page.component';\nimport {ClientComponent} from './client/client.component';\nimport {CellphonePipe} from \"./pipes/cellphone.pipe\";\nimport { ClientRegistrationComponent } from './client-registration/client-registration.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        ErrorPageComponent,\n        MainPageComponent,\n        ClientsPageComponent,\n        ClientComponent,\n        CellphonePipe,\n        ClientRegistrationComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./services/auth.service\";\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {\n    }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.authService.isAuthenticated().then(isAuth => {\n            if (isAuth) {\n                return true\n            } else {\n                this.router.navigate(['/'], {\n                    queryParams: {\n                        auth: false\n                    }\n                })\n                return false\n            }\n        })\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot,\n                     state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state)\n\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-client-registration',\n  templateUrl: './client-registration.component.html',\n  styleUrls: ['./client-registration.component.scss']\n})\nexport class ClientRegistrationComponent implements OnInit {\n  formClientReg: FormGroup\n  telephoneLength = 11\n\n  constructor() { }\n\n  ngOnInit() {\n    this.formClientReg = new FormGroup({\n      name: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      patronymic: new FormControl('', Validators.required),\n      telephone: new FormControl('',[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      address: new FormControl('', Validators.required)\n    })\n\n  }\n\n  submit() {\n    if(this.formClientReg.valid) {\n      const newClientData = {...this.formClientReg.value}\n\n      console.log('New Client Data: ', newClientData)\n    }\n\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"reg__client-form\">\n        <button class=\"btn btn-go-back\" type=\"button\" routerLink=\"/clientspage\">Назад</button>\n        <form class=\"reg__form\" [formGroup]=\"formClientReg\" (ngSubmit)=\"submit()\">\n            <h1 class=\"reg__title\">Регистрация нового клиента</h1>\n\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"cName\" class=\"reg__input\" placeholder=\"Имя\" formControlName=\"name\">\n                <div\n                    *ngIf=\"formClientReg.get('name')?.invalid && formClientReg.get('name')?.touched\"\n                    class=\"validation\"\n                >\n                    <small>Поле не может быть пустым</small>\n                </div>\n            </div>\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"surname\" class=\"reg__input\" placeholder=\"Фамилия\" formControlName=\"surname\">\n                <div\n                    *ngIf=\"formClientReg.get('surname')?.invalid && formClientReg.get('surname')?.touched\"\n                    class=\"validation\"\n                >\n                    <small>Поле не может быть пустым</small>\n                </div>\n            </div>\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"patronymic\" class=\"reg__input\" placeholder=\"Отчество\" formControlName=\"patronymic\">\n                <div\n                    *ngIf=\"formClientReg.get('patronymic')?.invalid && formClientReg.get('patronymic')?.touched\"\n                    class=\"validation\"\n                >\n                    <small>Поле не может быть пустым</small>\n                </div>\n            </div>\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"telephone\" class=\"reg__input\" placeholder=\"Телефон\" formControlName=\"telephone\">\n                <div\n                    *ngIf=\"formClientReg.get('telephone')?.invalid && formClientReg.get('telephone')?.touched\"\n                    class=\"validation\"\n                >\n                    <small *ngIf=\"formClientReg.get('telephone')?.errors?.['required']\">\n                        Поле не может быть пустым\n                    </small>\n                    <small *ngIf=\"formClientReg.get('telephone')?.hasError('minlength')\">\n                        Введите телефон длиной {{formClientReg.get('telephone')?.errors?.['minlength'].requiredLength}} символов.\n                        Вы ввели {{formClientReg.get('telephone')?.errors?.['minlength'].actualLength}}.\n                    </small>\n                    <small *ngIf=\"formClientReg.get('telephone')?.hasError('maxlength')\">\n                        Введите телефон длиной {{formClientReg.get('telephone')?.errors?.['maxlength'].requiredLength}} символов.\n                        Вы ввели {{formClientReg.get('telephone')?.errors?.['maxlength'].actualLength}}.\n                    </small>\n                </div>\n            </div>\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"email\" class=\"reg__input\" placeholder=\"E-mail\" formControlName=\"email\">\n                <div\n                    *ngIf=\"formClientReg.get('email')?.invalid && formClientReg.get('email')?.touched\"\n                    class=\"validation\"\n                >\n                    <small *ngIf=\"formClientReg.get('email')?.errors?.['required']\">\n                        Поле не может быть пустым\n                    </small>\n                    <small *ngIf=\"formClientReg.get('email')?.errors?.['email']\">\n                        Введите корректный E-mail\n                    </small>\n                </div>\n            </div>\n            <div class=\"reg__form-control\">\n                <input type=\"text\" name=\"address\" class=\"reg__input\" placeholder=\"Адрес\" formControlName=\"address\">\n                <div\n                    *ngIf=\"formClientReg.get('address')?.invalid && formClientReg.get('address')?.touched\"\n                    class=\"validation\"\n                >\n                    <small>Поле не может быть пустым</small>\n                </div>\n            </div>\n\n            <button class=\"btn reg__btn\" type=\"submit\" [disabled]=\"formClientReg.invalid\">Зарегистрировать</button>\n\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Client, ClientsService} from \"../services/clients.service\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {CalculationService} from \"../services/calculation.service\";\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n\n  client?: Client\n  moreInfoToggle = false\n  editToggle = false\n\n  constructor(\n      private route: ActivatedRoute,\n      private router: Router,\n      private clientsService: ClientsService,\n      public calculationService: CalculationService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.client = this.clientsService.getById(+params['id'])\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"client__card\">\n        <div class=\"client__card-header\">\n            <button class=\"btn\" routerLink=\"/clientspage\">Назад</button>\n            <div class=\"client-info\" *ngIf=\"!moreInfoToggle && !editToggle\">\n                <p>{{client?.surname}} {{client?.name}} {{client?.patronymic}}</p>\n                <p>{{client!.telephone | cellphone}}</p>\n                <p class=\"links-top-line-separator\"><a class=\"client__card-link\" (click)=\"moreInfoToggle = !moreInfoToggle\">Подробнее</a></p>\n            </div>\n            <div class=\"client-info\" *ngIf=\"moreInfoToggle\">\n                <p>{{client?.surname}} {{client?.name}} {{client?.patronymic}}</p>\n                <p>{{client!.telephone | cellphone}}</p>\n                <p>{{client?.address}}</p>\n                <p>{{client?.email}}</p>\n                <div class=\"flex-links links-top-line-separator\">\n                    <a class=\"client__card-link\" (click)=\"editToggle = !editToggle; moreInfoToggle = !moreInfoToggle\">Редактировать</a>\n                    <a class=\"client__card-link\" (click)=\"moreInfoToggle = !moreInfoToggle\">Скрыть</a>\n                </div>\n            </div>\n            <div class=\"client-info client-info__edit\" *ngIf=\"editToggle\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.surname\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.name\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.patronymic\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.telephone\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.address\">\n                <input class=\"input__style\" type=\"text\" placeholder=\"Фамилия\" [value]=\"client?.email\">\n                <a class=\"client__card-link links-top-line-separator\" (click)=\"editToggle = !editToggle; moreInfoToggle = !moreInfoToggle\">Сохранить</a>\n            </div>\n        </div>\n\n        <button class=\"btn\" [disabled]=\"true\" routerLink=\"\">Создать расчет</button>\n\n        <table class=\"calculation__table\">\n            <tr class=\"calculation__table-headers\">\n                <th>Номер</th>\n                <th>Дата</th>\n                <th>Статус</th>\n                <th>Адрес</th>\n                <th>Копирование</th>\n                <th>Удаление</th>\n            </tr>\n            <tr class=\"calculation__data\" *ngFor=\"let calc of calculationService.calculation\">\n                <td><a href=\"\" class=\"client__card-link\">Расчет №{{calc.numberN}}</a></td>\n                <td>{{calc.created_date | date:'dd.MM.yyyy'}}</td>\n                <td *ngIf=\"calc.cStatus; else falseStatus\">Актуален</td>\n                <ng-template #falseStatus>\n                    <td>Не актуален</td>\n                </ng-template>\n                <td>{{calc.addressOC}}</td>\n                <td><button class=\"btn\">Копировать</button></td>\n                <td><button class=\"btn danger\">Удалить</button></td>\n            </tr>\n        </table>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ClientsService} from \"../services/clients.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-clients-page',\n  templateUrl: './clients-page.component.html',\n  styleUrls: ['./clients-page.component.scss']\n})\nexport class ClientsPageComponent implements OnInit {\n\n  constructor(\n      public clientsService: ClientsService,\n      private route: ActivatedRoute,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"clients__container\">\n        <h1 class=\"clients__title\">Клиенты</h1>\n        <button class=\"btn clients__btn\" routerLink=\"/clientregistration\">Создать клиента</button>\n\n        <div class=\"clients__cards\">\n            <div class=\"clients__card\" *ngFor=\"let cl of clientsService.clients\">\n                <a class=\"link-clients__card\" [routerLink]=\"['/clientspage', cl.id]\">\n                    <p class=\"clients__card-line\">\n                        {{cl.surname}}\n                        {{cl.name}}\n                        {{cl.patronymic}}\n                    </p>\n                    <p class=\"clients__card-line\">\n                        {{cl.address}}\n                    </p>\n                    <p class=\"clients__card-line\">\n                        {{cl.telephone | cellphone}}\n                    </p>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"error__container\">\n        <h1 class=\"error__title\">Error 404</h1>\n        <a class=\"btn\" *ngIf=\"!auth.getIsAuth(); else clientsPage\" routerLink=\"/\">Вернуться на домашнюю страницу</a>\n        <ng-template #clientsPage>\n            <a class=\"btn\" routerLink=\"/clientspage\">Вернуться на страницу клиентов</a>\n        </ng-template>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n}\n","\n<div class=\"wrapper\">\n    <div class=\"loginpage\">\n\n        <div class=\"login__box\">\n            <h1 class=\"login__title\">Вход</h1>\n            <input type=\"text\" name=\"username\" class=\"login__input\" placeholder=\"Логин\" [(ngModel)]=\"auth.username\">\n            <input type=\"password\" name=\"password\" class=\"login__input\" placeholder=\"Пароль\" [(ngModel)]=\"auth.password\">\n            <button class=\"btn login__btn\" (click)=\"auth.login()\" routerLink=\"/clientspage\">Войти</button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--<div class=\"wrapper\">-->\n<!--    <div class=\"mainpage__info\">-->\n<!--        <h1 class=\"title\">Добро пожаловать</h1>-->\n\n<!--    </div>-->\n\n<!--</div>-->\n<main>\n    <div class=\"wrapper-main\">\n        <div class=\"content-main\">\n            <div class=\"main-header\">\n                <div class=\"layers\">\n                    <div class=\"layer__header\">\n                        <div class=\"layers__caption\">Добро пожаловать к мугиварам</div>\n                        <div class=\"layers__title\">Строительный калькулятор</div>\n                    </div>\n                    <div class=\"layer layers__base\" style=\"background-image: url(assets/images/roofs-base.png)\"></div>\n                    <div class=\"layer layers__back\" style=\"background-image: url(assets/images/roofs-back.png)\"></div>\n                    <div class=\"layer layers__middle\" style=\"background-image: url(assets/images/roofs-middle.png)\"></div>\n                    <div class=\"layer layers__front\" style=\"background-image: url(assets/images/roofs-front.png)\"></div>\n                </div>\n            </div>\n\n            <article class=\"main-article\" style=\"background-image: url(assets/images/street-base.png)\">\n                <div class=\"main-article__content\">\n                    <h2 class=\"main-article__header\">To be continued</h2>\n                    <p class=\"main-article__paragraph\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci assumenda ipsum minima recusandae reprehenderit rerum totam vel vero! Aperiam asperiores doloribus ipsa odit quibusdam. Dolores fugit illum inventore molestias nihil optio quos?</p>\n                    <div class=\"copyright\">© Mugivary</div>\n                </div>\n            </article>\n        </div>\n    </div>\n</main>\n\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n    name: 'cellphone'\n})\nexport class CellphonePipe implements PipeTransform{\n\n    transform(value: number): string {\n        let numbers = value.toString()\n        return `${numbers[0]}\n        (${numbers[1]}${numbers[2]}${numbers[3]})\n        ${numbers[4]}${numbers[5]}-${numbers[6]}${numbers[7]}-${numbers[8]}${numbers[9]}`\n    }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private isAuth = false\n  username = ''\n  password = ''\n\n  login() {\n    this.isAuth = true\n    console.log(this.username, ' ', this.password)\n  }\n\n  logout() {\n    this.isAuth = false\n  }\n\n  isAuthenticated(): Promise<boolean> {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(this.isAuth)\n      }, 50)\n    })\n  }\n\n  getIsAuth () {\n    return this.isAuth\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Calculation {\n  id: number\n  manager_id: number\n  addressOC: string\n  numberN: number\n  created_date: Date\n  cStatus: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalculationService {\n\n  calculation: Calculation[] = [\n    {id: 1, manager_id: 1, addressOC: 'Ленина, 32', numberN: 12, created_date: new Date('2.08.2021'), cStatus: false},\n    {id: 2, manager_id: 2, addressOC: 'somewhere on the middle', numberN: 18, created_date: new Date('4.12.2021'), cStatus: false},\n    {id: 3, manager_id: 2, addressOC: 'in your pants', numberN: 29, created_date: new Date('06.24.2022'), cStatus: true},\n    {id: 4, manager_id: 1, addressOC: 'Московское шоссе, 34Б', numberN: 45, created_date: new Date('09.02.2022'), cStatus: true},\n  ]\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Client {\n  id?: number\n  name: string\n  surname: string\n  patronymic: string\n  telephone: number\n  email: string\n  address: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ClientsService {\n  clientpage = true\n\n  clients: Client[] = [\n    {id: 11, name: 'Иван', surname: 'Луника', patronymic: 'Университетович', telephone: 89008887766, email: 'email1@gmail.com', address: 'Самара, улицинская, 35'},\n    {id: 22, name: 'Name2', surname: 'Surname2', patronymic: 'Patronymic2', telephone: 89008887766, email: 'email2@gmail.com', address: 'City2, street2, home2'},\n    {id: 33, name: 'Name3', surname: 'Surname3', patronymic: 'Patronymic3', telephone: 89008887766, email: 'email3@gmail.com', address: 'City3, street3, home3'},\n    {id: 44, name: 'Name4', surname: 'Surname4', patronymic: 'Patronymic4', telephone: 89008887766, email: 'email4@gmail.com', address: 'City4, street4, home4'},\n    {id: 55, name: 'Name5', surname: 'Surname5', patronymic: 'Patronymic5', telephone: 89008887766, email: 'email5@gmail.com', address: 'City5, street5, home5'},\n    {id: 66, name: 'Name6', surname: 'Surname6', patronymic: 'Patronymic6', telephone: 89008887766, email: 'email6@gmail.com', address: 'City6, street6, home6'},\n    {id: 77, name: 'Name7', surname: 'Surname7', patronymic: 'Patronymic7', telephone: 89008887766, email: 'email7@gmail.com', address: 'City7, street7, home7'},\n    {id: 88, name: 'Name8', surname: 'Surname8', patronymic: 'Patronymic8', telephone: 89008887766, email: 'email8@gmail.com', address: 'City8, street8, home8'},\n  ]\n\n  constructor() {\n  }\n\n  getById(id: number) {\n    return this.clients.find(c => c.id === id)\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Manager {\n  id?: number\n  name: string\n  surname: string\n  patronymic: string\n  jobpost: string\n  telephone: number\n  email: string\n  password: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n\n  managers: Manager[] = [\n    {\n      id: 1,\n      name: 'Игорь',\n      surname: 'Малинин',\n      patronymic: 'Игоревич',\n      jobpost: 'Старший Менеджер',\n      telephone: 89608223422,\n      email: 'igorswayts@gmail.com',\n      password: 12345678\n    }\n  ]\n\n  constructor() { }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}